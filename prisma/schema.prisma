generator client_js {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id       Int    @id @default(autoincrement())
    username String @unique
    password String
    points   Int
    friends String?

    // Many to One
    daily       DailyUser[]
    weekly      WeeklyUser[]
    recommended RecommendedChallenge[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model WeeklyUser {
    status Boolean
    date   DateTime

    // One to Many
    userId Int
    User   User @relation(fields: [userId], references: [id])

    // One to Many
    weeklyChallengeId Int
    WeeklyChallenge   WeeklyChallenge @relation(fields: [weeklyChallengeId], references: [id])

    @@id([userId, weeklyChallengeId])
}

model DailyUser {
    status Boolean
    date   DateTime

    // One to Many
    userId Int
    User   User @relation(fields: [userId], references: [id])

    // One to Many
    dailyChallengeId Int
    DailyChallenge   DailyChallenge @relation(fields: [dailyChallengeId], references: [id])

    @@id([userId, dailyChallengeId])
}

model RecommendedChallenge {
    date DateTime

    // One to Many
    userId Int
    user   User @relation(fields: [userId], references: [id])

    // One to Many
    dailyChallengeId Int
    DailyChallenge   DailyChallenge @relation(fields: [dailyChallengeId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@id([userId, dailyChallengeId])
}

model WeeklyChallenge {
    id          Int     @id @default(autoincrement())
    name        String
    description String
    difficulty  Int
    points      Int
    image       String?

    // Many to One
    WeeklyUser WeeklyUser[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model DailyChallenge {
    id          Int     @id @default(autoincrement())
    name        String
    description String
    difficulty  Int
    points      Int
    image       String?

    // Many to One
    DailyUser            DailyUser[]
    RecommendedChallenge RecommendedChallenge[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Article {
    id    Int     @id @default(autoincrement())
    title String
    image String?
    text  Json

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Fruit {
    id          Int     @id @default(autoincrement())
    name        String
    description String
    image       String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
