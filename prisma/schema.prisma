generator client_js {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id       Int    @id @default(autoincrement())
    username String @unique
    password String
    points   Int

    friendWith User[] @relation("UserFriends")
    friendOf   User[] @relation("UserFriends")

    dailyChallenge       DailyChallenge[]       @relation("UserToDailyChallenge")
    recommendedChallenge RecommendedChallenge[]
    UserChallenge UserChallenge[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model DailyChallenge {
    id          Int     @id @default(autoincrement())
    name        String
    description String
    difficulty  Int
    points      Int
    image       String?

    userIdList    User[]          @relation("UserToDailyChallenge")
    UserChallenge UserChallenge[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model UserChallenge {
    id            Int      @id @default(autoincrement())
    success       Boolean
    dateCompleted DateTime

    userId Int
    User   User @relation(fields: [userId], references: [id])

    dailyChallengeId Int
    DailyChallenge   DailyChallenge @relation(fields: [dailyChallengeId], references: [id])
}

model RecommendedChallenge {
    id              Int      @id @default(autoincrement())
    challengeName   String
    dateRecommended DateTime @default(now())

    userId Int
    user   User @relation(fields: [userId], references: [id])
}

model WeeklyChallenge {
    id          Int     @id @default(autoincrement())
    name        String
    description String
    points      Int
    image       String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Fruit {
    id          Int     @id @default(autoincrement())
    name        String
    description String
    image       String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
